<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>tv.memoryleakdeath</groupId>
    <artifactId>greenmail-gui</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>
    <properties>
        <maven.compiler.target>17</maven.compiler.target>
        <maven.compiler.source>17</maven.compiler.source>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>        
        <spring.framework.version>6.0.10</spring.framework.version>
        <servlet.api.version>6.0.0</servlet.api.version>
        <thymeleaf.version>3.1.1.RELEASE</thymeleaf.version>
        <slf4j.version>2.0.7</slf4j.version>
        <logback.version>1.4.8</logback.version>
        <junit.version>5.9.3</junit.version>
        <mockito.version>5.4.0</mockito.version>
        <hamcrest.version>2.2</hamcrest.version>
        <jsonpath.version>2.8.0</jsonpath.version>
        <commonslang.version>3.12.0</commonslang.version>
        <commonstext.version>1.10.0</commonstext.version>
        <faker.version>2.0.1</faker.version>
        <greenmail.version>2.1.0-alpha-1</greenmail.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-framework-bom</artifactId>
                <version>${spring.framework.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.thymeleaf</groupId>
                <artifactId>thymeleaf-parent</artifactId>
                <version>${thymeleaf.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>        
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>        
        <dependency>
            <groupId>org.thymeleaf</groupId>
            <artifactId>thymeleaf-spring6</artifactId>
        </dependency>
        <dependency>
            <groupId>org.thymeleaf.extras</groupId>
            <artifactId>thymeleaf-extras-springsecurity6</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commonslang.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
            <version>${commonstext.version}</version>
        </dependency>
        <dependency>
            <groupId>com.icegreen</groupId>
            <artifactId>greenmail-spring</artifactId>
            <version>${greenmail.version}</version>
        </dependency>
    
        <!-- Test Dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>${hamcrest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <version>${jsonpath.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.datafaker</groupId>
            <artifactId>datafaker</artifactId>
            <version>${faker.version}</version>
            <scope>test</scope>
        </dependency>        
    </dependencies>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources_filtered</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <release>${maven.compiler.target}</release>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.4.0</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.3.0</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>10.12.0</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <configLocation>checkstyle.xml</configLocation>
                </configuration>
           </plugin>
           <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-surefire-plugin</artifactId>
               <version>3.1.2</version>
           </plugin>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.12.1</version>
                <executions>
                    <execution>
                        <id>install npm and node</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <nodeVersion>v18.15.0</nodeVersion>
                            <npmVersion>9.6.5</npmVersion>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm install Resources</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <arguments>install</arguments>
                        </configuration>
                    </execution>                    
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>keytool-maven-plugin</artifactId>
                <version>1.7</version>
                <executions>
                  <execution>
                    <goals>
                      <goal>generateKeyPair</goal>
                    </goals>
                    <phase>generate-resources</phase>
                  </execution>
                </executions>
                <configuration>
                  <keystore>${project.basedir}/conf/local_keystore.jks</keystore>
                  <storepass>changeit</storepass>
                  <keypass>changeit</keypass>
                  <alias>tomcat</alias>
                  <dname>cn=localhost, ou=Test, L=Test, ST=Test, o=Test, c=US</dname>
                  <validity>99999</validity>
                  <keyalg>RSA</keyalg>
                  <keysize>2048</keysize>
                  <skipIfExist>true</skipIfExist>
                </configuration>
            </plugin>            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.1</version>
                <executions>
                    <execution>
                        <id>Copy frontend NPM resources to static js folder</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.basedir}/src/main/webapp/WEB-INF/js</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/node_modules/jquery/dist/</directory>
                                    <include>jquery.min.js</include>
                                    <include>jquery.min.map</include>
                                </resource>
                                <resource>
                                    <directory>${project.basedir}/node_modules/bootstrap/dist/js</directory>
                                    <include>bootstrap.bundle.min.js</include>
                                    <include>bootstrap.bundle.min.js.map</include>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Copy frontend NPM resources to static css folder</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.basedir}/src/main/webapp/WEB-INF/css</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/node_modules/bootstrap/dist/css</directory>
                                    <include>bootstrap.min.css</include>
                                    <include>bootstrap.min.css.map</include>
                                </resource>
                                <resource>
                                    <directory>${project.basedir}/node_modules/@fortawesome/fontawesome-free/css</directory>
                                    <include>brands.min.css</include>
                                    <include>fontawesome.min.css</include>
                                    <include>solid.min.css</include>
                                    <include>regular.min.css</include>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Copy frontend NPM resources to static fonts folder</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.basedir}/src/main/webapp/WEB-INF/webfonts</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/node_modules/@fortawesome/fontawesome-free/webfonts</directory>
                                    <include>fa-brands-400.ttf</include>
                                    <include>fa-brands-400.woff2</include>
                                    <include>fa-regular-400.ttf</include>
                                    <include>fa-regular-400.woff2</include>
                                    <include>fa-solid-900.ttf</include>
                                    <include>fa-solid-900.woff2</include>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>        
    </build>
</project>